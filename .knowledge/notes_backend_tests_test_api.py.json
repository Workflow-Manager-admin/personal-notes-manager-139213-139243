{"is_source_file": true, "format": "Python", "description": "Test suite for the API endpoints of the personal notes manager backend, including authentication, note CRUD operations, and search functionality.", "external_files": ["pytest"], "external_methods": ["client.get", "client.post", "client.put", "client.delete"], "published": [], "classes": [], "methods": [{"name": "test_health_check(client)", "description": "Tests the health check endpoint to ensure server responds correctly.", "scope": "", "scopeKind": ""}, {"name": "test_register_and_login(client, user_data)", "description": "Tests user registration and login endpoints, including duplicate registration and credential validation.", "scope": "", "scopeKind": ""}, {"name": "test_profile_requires_auth(client, user_data)", "description": "Ensures profile endpoint requires authentication and returns correct user info.", "scope": "", "scopeKind": ""}, {"name": "test_notes_crud(client, auth_header)", "description": "Performs create, read, update, delete operations on notes, verifying each operation's correctness.", "scope": "", "scopeKind": ""}, {"name": "test_notes_auth_required(client)", "description": "Verifies that notes endpoints enforce authentication.", "scope": "", "scopeKind": ""}, {"name": "test_notes_multi_user(client, auth_header, second_auth_header)", "description": "Ensures notes are isolated between users, preventing access or modification by others.", "scope": "", "scopeKind": ""}, {"name": "test_notes_search(client, auth_header)", "description": "Tests the search functionality for notes filtering by title and content.", "scope": "", "scopeKind": ""}, {"name": "test_create_note_invalid(client, auth_header)", "description": "Checks validation errors when creating notes with missing or invalid data.", "scope": "", "scopeKind": ""}, {"name": "test_update_note_not_found(client, auth_header)", "description": "Tests updating a non-existent note returns 404.", "scope": "", "scopeKind": ""}, {"name": "test_delete_note_not_found(client, auth_header)", "description": "Tests deleting a non-existent note returns 404.", "scope": "", "scopeKind": ""}, {"name": "test_duplicate_registration(client, user_data)", "description": "Verifies that duplicate user registrations are rejected with conflict error.", "scope": "", "scopeKind": ""}], "calls": ["client.get", "client.post", "client.put", "client.delete"], "search-terms": ["test_api", "authentication", "notes CRUD", "search notes", "user registration", "login", "API endpoint tests"], "state": 2, "file_id": 11, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "test_create_note_invalid", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_create_note_invalid(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_delete_note_not_found", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_delete_note_not_found(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_duplicate_registration", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_duplicate_registration(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_health_check", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_health_check(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_notes_auth_required", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_auth_required(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_notes_crud", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_crud(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_notes_multi_user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_multi_user(client, auth_header, second_auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header, second_auth_header)"}, {"_type": "tag", "name": "test_notes_search", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_search(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_profile_requires_auth", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_profile_requires_auth(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_register_and_login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_register_and_login(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_update_note_not_found", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_update_note_not_found(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}], "hash": "f36db969a9841f664a862017686e3ca4", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/tests/test_api.py", "revision_history": [{"25": ""}]}