{"is_source_file": true, "format": "Python", "description": "This file contains test cases for the API endpoints of a backend application, including authentication, notes CRUD operations, authorization checks, and search functionality.", "external_files": ["client (test client interface)", "user_data (test fixture or data used for authentication tests)"], "external_methods": ["client.get", "client.post", "client.put", "client.delete"], "published": [], "classes": [], "methods": [{"name": "test_health_check(client)", "description": "Tests the health check endpoint to ensure the API is responsive.", "scope": "", "scopeKind": ""}, {"name": "test_register_and_login(client, user_data)", "description": "Tests user registration and login flows, including duplicate registration and login validation.", "scope": "", "scopeKind": ""}, {"name": "test_profile_requires_auth(client, user_data)", "description": "Ensures that profile endpoint requires authentication and returns correct user info when authorized.", "scope": "", "scopeKind": ""}, {"name": "test_notes_crud(client, auth_header)", "description": "Performs CRUD operations on notes to validate create, read, update, and delete functionalities.", "scope": "", "scopeKind": ""}, {"name": "test_notes_auth_required(client)", "description": "Checks that notes endpoints enforce authentication.", "scope": "", "scopeKind": ""}, {"name": "test_notes_multi_user(client, auth_header, second_auth_header)", "description": "Ensures note access is scoped per user, preventing cross-user data access.", "scope": "", "scopeKind": ""}, {"name": "test_notes_search(client, auth_header)", "description": "Verifies the search functionality within notes based on title and content.", "scope": "", "scopeKind": ""}, {"name": "test_create_note_invalid(client, auth_header)", "description": "Validates input validation rules for note creation, such as missing title or overly long title.", "scope": "", "scopeKind": ""}, {"name": "test_update_note_not_found(client, auth_header)", "description": "Checks that updating a nonexistent note returns a 404 error.", "scope": "", "scopeKind": ""}, {"name": "test_delete_note_not_found(client, auth_header)", "description": "Checks that deleting a nonexistent note returns a 404 error.", "scope": "", "scopeKind": ""}, {"name": "test_duplicate_registration(client, user_data)", "description": "Ensures duplicate registration is handled properly, rejecting or preventing duplicates.", "scope": "", "scopeKind": ""}], "calls": ["client.get", "client.post", "client.put", "client.delete"], "search-terms": ["test_api", "auth", "notes", "CRUD", "search", "health check", "user registration", "login", "authorization", "notes endpoints"], "state": 2, "file_id": 11, "knowledge_revision": 27, "git_revision": "2d81ae177bffa6253c66547c16c82454b355727c", "revision_history": [{"25": ""}, {"27": "2d81ae177bffa6253c66547c16c82454b355727c"}], "ctags": [{"_type": "tag", "name": "test_create_note_invalid", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_create_note_invalid(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_delete_note_not_found", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_delete_note_not_found(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_duplicate_registration", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_duplicate_registration(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_health_check", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_health_check(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_notes_auth_required", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_auth_required(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_notes_crud", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_crud(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_notes_multi_user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_multi_user(client, auth_header, second_auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header, second_auth_header)"}, {"_type": "tag", "name": "test_notes_search", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_notes_search(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}, {"_type": "tag", "name": "test_profile_requires_auth", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_profile_requires_auth(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_register_and_login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_register_and_login(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_update_note_not_found", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-139213-139243/notes_backend/tests/test_api.py", "pattern": "/^def test_update_note_not_found(client, auth_header):$/", "language": "Python", "kind": "function", "signature": "(client, auth_header)"}], "hash": "28a54208d26b37f423dd0e7ba379929a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/tests/test_api.py"}